{"version":3,"sources":["compnents/LeftNav.js","compnents/RightNav.js","compnents/AllChatsCard.js","compnents/AllChats.js","firebase.js","compnents/MessageBar.js","App.js","reportWebVitals.js","index.js"],"names":["LeftNav","props","user","useContext","UserContext","className","src","photoURL","alt","onClick","signOutGoogle","style","display","flex","minWidth","justifyContent","color","fontSize","RightNav","selectedUser","displayName","AllChatsCard","setselectedUser","AllChats","type","placeholder","activeUsers","map","chat","uid","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","auth","provider","GoogleAuthProvider","signOut","then","result","console","log","MessageBar","selectedUserid","useState","currentChat","setCurrentChat","messageInput","setmessageInput","addMessage","obj","collectionName","msg","sender","reciver","timestamp","FieldValue","serverTimestamp","collection","add","useEffect","orderBy","onSnapshot","docs","doc","data","id","tempChats","padding","paddingLeft","value","onChange","e","target","cursor","paddingRight","React","createContext","App","setuser","setactiveUsers","onAuthStateChanged","authUser","tempuser","email","Provider","signInWithPopup","docName","set","position","top","left","backgroundColor","border","transform","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75b8def1.chunk.js","sourcesContent":["import userEvent from '@testing-library/user-event'\r\nimport React,{useContext} from 'react'\r\nimport {UserContext} from '../App';\r\n\r\n\r\n\r\nexport default function LeftNav(props) {\r\n    var user=useContext(UserContext)[0];\r\n    // console.log(user);\r\n\r\n    return (\r\n        <>\r\n        <div className=\"leftnav\">\r\n            <div>\r\n                <img className=\"profile__pic\"\r\n                src={user.photoURL}\r\n                    alt=\"\"  onClick={props.signOutGoogle}/>\r\n            </div>\r\n            <div style={{display: 'flex',flex:'0.3',minWidth:'90px',justifyContent: 'space-around',}}>\r\n                <i className='far fa-comment-alt' style={{color:'#B1B3B5',fontSize: '1.5rem',}}></i>\r\n                <i className=\"fas fa-ellipsis-v\" style={{color:'#B1B3B5',fontSize: '1.5rem',}}></i>\r\n\r\n            </div>\r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function RightNav(props) {\r\n    return (\r\n        <div className=\"rightnav\">\r\n        <div className=\"currentChatHeader\">\r\n            <div>\r\n                <img className=\"profile__pic\"\r\n                    src={props.selectedUser?props.selectedUser.photoURL:''}\r\n                    alt=\"\" />\r\n            </div>\r\n            <div className=\"profile__info\">\r\n                <h3>{props.selectedUser?props.selectedUser.displayName:''}</h3>\r\n                <span>online</span>\r\n            </div>\r\n        </div>\r\n        <div style={{display: 'flex',flex:'0.1',justifyContent: 'space-around',minWidth:'90px'}}>\r\n            <i className='fas fa-search' style={{color:'#B1B3B5',fontSize: '1.5rem'}}></i>\r\n            <i className=\"fas fa-ellipsis-v\" style={{color:'#B1B3B5',fontSize: '1.5rem'}}></i>\r\n\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\n\r\nexport default function AllChatsCard(props) {\r\n\r\n    return (\r\n        <div className=\"currentChatHeader chatCard\" onClick={()=>{\r\n            props.setselectedUser(props.user);\r\n        }}>\r\n\r\n        <div className=\"chatFlex\">\r\n        <div style={{display: 'flex'}}>\r\n            <div>\r\n                <img className=\"profile__pic\"\r\n                   src={props.user.photoURL}\r\n                    alt=\"\"/>\r\n            </div>\r\n            <div className=\"profile__info\">\r\n    <h3 style={{fontSize:'small'}}>{props.user.displayName}</h3>\r\n                {/* <span>Hey How Are You?</span> */}\r\n            </div>\r\n        </div>\r\n        {/* <span style={{fontSize: 'x-small'}}>Thursday</span> */}\r\n    </div>\r\n    </div>\r\n\r\n    )\r\n}\r\n","import React,{useContext} from 'react'\r\nimport AllChatsCard from './AllChatsCard'\r\n\r\n\r\nexport default function AllChats(props) {\r\n    \r\n\r\n\r\n    return (\r\n        <div className=\"allChats\">\r\n\r\n        <div className=\"searchContainer\">\r\n\r\n            <div className=\"search__inputContainer\">\r\n                <i className='fas fa-search' ></i>\r\n\r\n                <input type=\"text\" placeholder=\"Search or start a  new chat\" />\r\n            </div>\r\n        </div>\r\n        <div className=\"ChatsScroll\">\r\n\r\n        {props.activeUsers.map((chat)=>{\r\n            // console.log('allchats')\r\n           return  <AllChatsCard key={chat.uid} user={chat} setselectedUser={props.setselectedUser}/>\r\n        })}\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n    </div>\r\n    )\r\n}\r\n","\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nvar firebaseConfig  = {\r\n    apiKey: \"AIzaSyDOvKaLJVg2bQurq4sUJF7_6cTR1tTG7zU\",\r\n    authDomain: \"whatsappclone-1-509b9.firebaseapp.com\",\r\n    databaseURL: \"https://whatsappclone-1-509b9.firebaseio.com\",\r\n    projectId: \"whatsappclone-1-509b9\",\r\n    storageBucket: \"whatsappclone-1-509b9.appspot.com\",\r\n    messagingSenderId: \"108792138619\",\r\n    appId: \"1:108792138619:web:2ff7d29727236073888bde\"\r\n  };\r\n\r\n\r\n// all the required initialisations\r\nfirebase.initializeApp(firebaseConfig);\r\nexport  const db=firebase.firestore();\r\nexport const auth = firebase.auth();\r\nexport const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n// call this function to sign in the user with google\r\nexport const signInWithGoogle = () => {\r\n  auth.signInWithPopup(provider).then((result) => {return(result)});\r\n};\r\n\r\n//call this function to signout the user with google auth\r\nexport const signOutGoogle=()=>{\r\n  auth.signOut().then((result) => console.log(result))\r\n}\r\n\r\n\r\n\r\n//returns if the user is logged in or no\r\nexport function IsLoggedIn(){\r\n  var user = firebase.auth().currentUser;\r\n\r\n  if (user) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\n\r\n//takes the object to be stored and the collection name\r\nexport  function pushToFireBase(obj,collectionName){\r\n  db.collection(collectionName).add(obj)\r\n}\r\n\r\n//write the data if the doc doesnt exist otherwise overwrites the old doc\r\nexport  function overwriteToFireBase(obj,collectionName,docName){\r\n\r\ndb.collection(collectionName).doc(docName).set(obj)\r\n}\r\n\r\n// Just For Reference\r\n\r\n\r\n//takes collection name and returns data\r\n\r\n\r\n// write the function in a useEffect cause its async with firebase\r\nexport function getDataFromCollection(collectionName){\r\n\r\ndb.collection(collectionName).onSnapshot(result=>{\r\n  result.docs.map(\r\n    (doc)=>{\r\n      var data=doc.data();\r\n     console.log(data);\r\n    }\r\n  )\r\n})\r\n\r\n}","import React,{useContext,useEffect,useState,useRef} from 'react'\r\nimport AllChatsCard from './AllChatsCard'\r\nimport { UserContext } from '../App'\r\nimport {db,pushToFireBase} from '../firebase'\r\nimport firebase from \"firebase/app\";\r\n\r\n\r\n\r\nexport default function MessageBar(props) {\r\n    var user=useContext(UserContext)[0];\r\n    var selectedUserid=props.selectedUser?props.selectedUser.uid:'';\r\n\r\n\r\n    const [currentChat,setCurrentChat]=useState([]);\r\n    const [messageInput,setmessageInput]=useState([]);\r\n  \r\n\r\n  \r\n    // useEffect(()=>{\r\n    //     var temp=[];\r\n    //     db.collection('chats')\r\n    //     .orderBy('timestamp','asc').onSnapshot(result=>{\r\n    //     result.docs.map((doc)=>{\r\n    //         // console.log(doc.id);\r\n    //        if((doc.data()['sender']===user.uid && doc.data()['reciver']===selectedUserid ) || (doc.data()['sender']===selectedUserid && doc.data()['reciver']===user.uid)){\r\n    //         var data=doc.data();\r\n    //         data['id']=doc.id;\r\n    //         temp.push(data);\r\n    //        }\r\n            \r\n    //         }\r\n    //     )\r\n            \r\n    //     setCurrentChat(temp);\r\n        \r\n    //   })},[selectedUserid,user]);\r\n\r\n    //   console.log(currentChat)\r\n      \r\n\r\n    useEffect(()=>{\r\n        var temp=[];\r\n        \r\n        db.collection('chats')\r\n        .orderBy('timestamp','asc')\r\n        .onSnapshot(result=>{\r\n      \r\n        setCurrentChat(\r\n          result.docs.map((doc)=>(\r\n            {data:doc.data(),\r\n            id:doc.id}\r\n          \r\n            ))\r\n        \r\n        \r\n        \r\n        )\r\n    })},[]);\r\n        \r\n\r\n    function removeDuplicates(books) { \r\n      \r\n\r\n          \r\n        var jsonObject = books.map(JSON.stringify); \r\n  \r\n  \r\n  \r\n        var uniqueSet = new Set(jsonObject); \r\n        var uniqueArray = Array.from(uniqueSet).map(JSON.parse); \r\n  \r\n       return (uniqueArray); \r\n    } \r\n      function addMessage(props){\r\n         \r\n        if(messageInput!==''){\r\n        pushToFireBase({\r\n            msg:messageInput,\r\n            sender:user.uid,\r\n            reciver:selectedUserid,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n\r\n        },'chats')\r\n    }\r\n        setmessageInput('');\r\n        \r\n\r\n\r\n\r\n    }\r\n\r\n// var chats=removeDuplicates(currentChat);\r\nvar tempChats=currentChat.map(chat=>{\r\n    if((chat.data['sender']===user.uid && chat.data['reciver']===selectedUserid ) || (chat.data['sender']===selectedUserid && chat.data['reciver']===user.uid))\r\n    {\r\n  \r\n    return (\r\n        \r\n        <div key={chat.id} className={chat.data.sender===user.uid?'sendMessage':'reciveMessage'} >\r\n        <span>{chat.data.msg}</span>\r\n        </div>  \r\n    )\r\n  }\r\n  else{\r\n      return(\r\n          <div key={chat.id}></div>\r\n      )\r\n  }\r\n    \r\n});\r\n\r\n    return (\r\n        <div className=\"messageBar\">\r\n\r\n            <div className=\"chatMessages\">\r\n                {\r\n\r\n                    tempChats\r\n                }\r\n\r\n              \r\n                {/* <!-- recive message --> */}\r\n                {/* <div className=\"reciveMessage\">\r\n                    <span>I'm Great!</span>\r\n\r\n                    \r\n                </div> */}\r\n                <div  id=\"messageEnd\"></div>\r\n            </div>\r\n            \r\n                {/* <!-- reciver message --> */}\r\n            <div className=\"messageInput\">\r\n                <i className=\"fas fa-grin-alt\" style={{fontSize: '1.5rem',padding: '0.5rem',paddingLeft: '1rem',}}></i>\r\n                <i className=\"fas fa-paperclip\" style={{fontSize: '1.5rem',padding: '0.5rem',}}></i>\r\n                <input type=\"text\" placeholder=\"Type a message\"  value={messageInput} onChange={(e)=>setmessageInput(e.target.value)}/>\r\n                <i className=\"far fa-paper-plane\" style={{cursor:'pointer',fontSize: '1.5rem',padding: '0.5rem',paddingRight:'1rem',}} onClick={()=>{addMessage(props)}}></i>\r\n            </div>\r\n\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n","\nimport './App.css';\nimport LeftNav from './compnents/LeftNav';\nimport RightNav from './compnents/RightNav';\nimport AllChats from './compnents/AllChats';\nimport MessageBar from './compnents/MessageBar';\nimport React,{ useState,useEffect } from 'react';\nimport {auth,provider,overwriteToFireBase,db,signOutGoogle} from '../src/firebase'\nimport firebase from \"firebase/app\";\n\nexport const UserContext =React.createContext();\nconst testUser=   {\n  uid:'JVBBbvlceTVpasCdTRG285NmsyF3',\n  email:'test@gmail',\n  displayName:'test name',\n  photoURL:'https://lh3.googleusercontent.com/a-/AOh14GiaXf3DrKKKqY6RI5fx2OIoMDaI9sNZsjttac8uucI=s96-c',\n}\n\nfunction App() {\n\n  // States\nconst [user,setuser]=useState();\nconst [activeUsers,setactiveUsers]=useState([]);\nconst [selectedUser,setselectedUser]=useState();\n\n// End States\n\n// Functions\n\nfunction signInWithGoogle() {\n  auth.signInWithPopup(provider).then((result) => {\n    var tempuser={\n      uid:result.user.uid,\n      email:result.user.email,\n      displayName:result.user.displayName,\n      photoURL:result.user.photoURL\n    }\n    \n    overwriteToFireBase(tempuser,'activeUsers',tempuser.uid);\n    setuser(tempuser)\n  }\n    );\n};\n\n\nuseEffect(\n  ()=>{\n    auth.onAuthStateChanged(authUser=>{\n      if(authUser){\n        var tempuser={\n          uid:authUser.uid,\n          email:authUser.email,\n          displayName:authUser.displayName,\n          photoURL:authUser.photoURL\n        }\n    setuser(tempuser);\n    setselectedUser(tempuser);\n      }\n      else{\n        setuser(null);\n\n        setselectedUser(null);\n      }\n    })\n  },[]\n)\n// console.log(user);\n\n\n\n\n  \n  \n\n// End Functions\n\n\n// Use Effect\n\n\nuseEffect(()=>{\n  var temp=[];\n  \n  db.collection('activeUsers')\n  .onSnapshot(result=>{\n\n  setactiveUsers(\n    result.docs.map((doc)=>(\n      doc.data()\n    \n      ))\n  \n  \n  \n  )\n \n  // setactiveUsers(temp);\n  // console.log('users changed');\n  // console.log(activeUsers);\n  \n})},[]);\n\n// End Use Effect\n  return (\n\n  <>\n  {\n\nuser?\n// logged in\n<UserContext.Provider  value={[user,activeUsers]}>\n<div className=\"container\">\n <LeftNav signOutGoogle={signOutGoogle}></LeftNav>\n <RightNav selectedUser={selectedUser}></RightNav>\n <AllChats setselectedUser={setselectedUser} activeUsers={activeUsers}></AllChats>\n <MessageBar selectedUser={selectedUser}></MessageBar>\n</div>\n</UserContext.Provider>:\n\n// logged out\n<button onClick={signInWithGoogle} style={{position:'absolute',top:'50%',left:'50%',backgroundColor:'#ccc',border:'none',padding:'1rem',transform: 'translate(-50%, -50%)'}}>Sign in with google</button>\n\n\n  }\n\n\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}